% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rehybridize.R
\name{rehybridize}
\alias{rehybridize}
\title{Rehybridization with an array-to-sample assignment}
\usage{
rehybridize(smp.eff, ary.eff, group.id, group.id.level = c("E", "V"),
  ary.to.smp.assign, icombat = FALSE, isva = FALSE, iruv = FALSE,
  smp.eff.ctrl = NULL, ary.eff.ctrl = NULL)
}
\arguments{
\item{smp.eff}{sample effect data, rows as probes, columns as samples.}

\item{ary.eff}{array effect data, rows as probes, columns as samples; must have same dimensions and same probe name as sample effect data.}

\item{group.id}{sample group label; must be a 2-level non-numeric factor vector.}

\item{group.id.level}{sample group label level, the first one being the reference level; default = c("E", "V") in our studies when comparing endometrial to ovarian samples.}

\item{ary.to.smp.assign}{array-to-sample assignment, equal length as number of samples of sample effect data; first half of the vector assigning to endometrial, second half to ovarian.}

\item{icombat}{indicator for combat adjustment; default is not to adjust, icombat = FALSE.}

\item{isva}{indicator for sva adjustment; default is not to adjust, isva = FALSE.}

\item{iruv}{indicator for RUV-4 adjustment; default is not to adjust, iruv = FALSE.}

\item{smp.eff.ctrl}{negative-control gene sample effect data if iruv = TRUE.}

\item{ary.eff.ctrl}{negative-control gene array effect data if iruv = TRUE}
}
\value{
simulated data, after batch adjustment if specified
}
\description{
Creates simulated dataset through rehybridization with a specified array-to-sample assignment.
}
\examples{
\dontrun{
smp.eff <- estimate.smp.eff(r.data = r.data.pl)
ary.eff <- estimate.ary.eff(r.data = r.data.pl,
                             non.r.data = non.r.data.pl)
ctrl.genes <- unique(rownames(r.data.pl))[grep("NC", unique(rownames(r.data.pl)))]
smp.eff.nc <- smp.eff[!rownames(smp.eff) \%in\% ctrl.genes, ]
ary.eff.nc <- ary.eff[!rownames(ary.eff) \%in\% ctrl.genes, ]
assign.ind <- confounding.design(seed = 1, num.smp = 192,
degree = "complete", rev.order = FALSE)
group.id <- substr(colnames(smp.eff.nc), 7, 7)
sim.data.raw <- rehybridize(smp.eff = smp.eff.nc,
                            ary.eff = ary.eff.nc,
                            group.id = group.id,
                            ary.to.smp.assign = assign.ind)
sim.data.sva <- rehybridize(smp.eff = smp.eff.nc,
                            ary.eff = ary.eff.nc,
                            group.id = group.id,
                            ary.to.smp.assign = assign.ind,
                            isva = TRUE)
smp.eff.ctrl <- smp.eff[rownames(smp.eff) \%in\% ctrl.genes, ]
ary.eff.ctrl <- ary.eff[rownames(ary.eff) \%in\% ctrl.genes, ]
sim.data.ruv <- rehybridize(smp.eff = smp.eff.nc,
                            ary.eff = ary.eff.nc,
                            group.id = group.id,
                            ary.to.smp.assign = assign.ind,
                            iruv = TRUE,
                            smp.eff.ctrl = smp.eff.ctrl,
                            ary.eff.ctrl = ary.eff.ctrl)
}
}
\keyword{data.setup}

